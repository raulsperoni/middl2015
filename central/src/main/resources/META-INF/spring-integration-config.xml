<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:file="http://www.springframework.org/schema/integration/file"
             xmlns="http://www.springframework.org/schema/integration"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/integration
                  http://www.springframework.org/schema/integration/spring-integration.xsd

                         http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">


    <!-- Gateway para enviar los request desde ServicioRecepcionPagosPortImpl -->
    <gateway id="recepcionPagosGateway"
             default-request-channel="inputPagosChannel"
             default-reply-channel="outputChannel"
             service-interface="org.fing.middleware.integration.RecepcionPagosGateway">
        <method name="procesarPagos"/>
    </gateway>

    <!-- Transporta TransaccionPago -->
    <channel id="inputPagosChannel"/>

    <!-- Splitter para separar los mensajes -->
    <splitter
            id="pagosSplitter"
            ref="splitterBean"
            method="extraerPagos"
            input-channel="inputPagosChannel"
            output-channel="splitterChannel"/>

    <channel id="splitterChannel">
    </channel>

    <beans:bean id="splitterBean" class="org.fing.middleware.integration.SplitterBean"/>

    <!-- Router para ruteat los pagos a los canales adecuados -->
    <router input-channel="splitterChannel" expression="payload.pago.nombreGestion">
        <mapping value="Entradas" channel="entradasChannel"/>
        <mapping value="Facturas" channel="facturasChannel"/>
        <mapping value="Offline" channel="offlineChannel"/>
    </router>


    <channel id="resultChannel"/>

    <!--###############################################################-->
    <!-- Proceso de facturas -->

    <channel id="facturasChannel"/>


    <chain input-channel="facturasChannel" output-channel="resultChannel">
        <service-activator ref="cobroFacturasBean" method="cobro"/>
    </chain>

    <beans:bean id="cobroFacturasBean" class="org.fing.middleware.integration.CobroFacturasBean"/>


    <!--###############################################################-->
    <!-- Proceso de entradas -->

    <channel id="entradasChannel"/>

    <chain input-channel="entradasChannel" output-channel="resultChannel">
        <service-activator ref="ventaEntradasBean" method="cobrar"/>
    </chain>

    <beans:bean id="ventaEntradasBean" class="org.fing.middleware.integration.VentaEntradasBean"/>


    <!--###############################################################-->
    <!-- Proceso offline -->

    <channel id="offlineChannel"/>


    <!-- Router para mandar archivo y respuesta -->
    <recipient-list-router input-channel="offlineChannel" apply-sequence="true">
        <recipient channel="fileConfirmacionChannel"/>
        <recipient channel="fileInChannel"/>
    </recipient-list-router>

    <channel id="fileInChannel"/>

    <transformer
            id="tranformerAFILE"
            ref="fileTransformerBean"
            input-channel="fileInChannel"
            method="transformarAFile"
            output-channel="fileOutChannel"/>

    <channel id="fileOutChannel"/>

    <beans:bean id="fileTransformerBean" class="org.fing.middleware.integration.FileTransformerBean"/>

    <file:outbound-gateway id="escribirArchivo" request-channel="fileOutChannel"
                           reply-channel="fileConfirmacionChannel"
                           directory="file:${java.io.tmpdir}/middleware/tmp"
                           mode="REPLACE" delete-source-files="true"
                           requires-reply="true"/>


    <channel id="fileConfirmacionChannel"/>

    <!--<file:outbound-channel-adapter id="fileOutChannel" directory="file:${java.io.tmpdir}/middleware/tmp"
                                   mode="REPLACE" delete-source-files="true"/>-->


    <aggregator
            id="offlineAggregator"
            input-channel="fileConfirmacionChannel"
            method="confirmarFile"
            ref="CobroOfflineAggregator"
            output-channel="resultChannel"
            group-timeout="3000"
            send-partial-result-on-expiry="true"
            >
    </aggregator>

    <beans:bean id="CobroOfflineAggregator" class="org.fing.middleware.integration.CobroOfflineAggregator"/>


    <!--###############################################################-->

    <!-- Aggregator para unir las respuestas y retornar el resultado al pedido -->
    <aggregator
            id="pagosAggregator"
            input-channel="resultChannel"
            method="confirmarPagos"
            ref="recepcionPagosAggregator"
            output-channel="outputChannel"
            group-timeout="3000"
            send-partial-result-on-expiry="true">
    </aggregator>

    <beans:bean id="recepcionPagosAggregator" class="org.fing.middleware.integration.RecepcionPagosAggregator"/>

    <channel id="outputChannel"/>

</beans:beans>
